import java.util.*;
import java.io.*;
import java.text.*;

public class Show {
    private String showId;
    private String type;
    private String title;
    private String director;
    private String[] cast;
    private String country;
    private Date dateAdded;
    private int releaseYear;
    private String rating;
    private String duration;
    private String[] listedIn;

    public String getShowId() {
        return showId;
    }
    
    public void setShowId(String showId) {
        this.showId = showId;
    }

    public String getType() {
        return type;
    }

    public void setType(String type) {
        this.type = type;
    }

    public String getTitle() {
        return title;
    }

    public void setTitle(String title) {
        this.title = title;
    }

    public String getDirector() {
        return director;
    }

    public void setDirector(String director) {
        this.director = director;
    }

    public String[] getCast() {
        return cast;
    }

    public void setCast(String[] cast) {
        this.cast = cast;
    }

    public String getCountry() {
        return country;
    }

    public void setCountry(String country) {
        this.country = country;
    }

    public Date getDateAdded() {
        return dateAdded;
    }

    public void setDateAdded(Date dateAdded) {
        this.dateAdded = dateAdded;
    }

    public int getReleaseYear() {
        return releaseYear;
    }

    public void setReleaseYear(int releaseYear) {
        this.releaseYear = releaseYear;
    }

    public String getRating() {
        return rating;
    }

    public void setRating(String rating) {
        this.rating = rating;
    }

    public String getDuration() {
        return duration;
    }

    public void setDuration(String duration) {
        this.duration = duration;
    }

    public String[] getListedIn() {
        return listedIn;
    }

    public Show(){
    	this.showId = "NaN";
	    this.type = "NaN";
	    this.title = "NaN";
	    this.director = "NaN";
	    this.cast = new String[]{"NaN"};
	    this.country = "NaN";
	    this.dateAdded = null;
	    this.releaseYear = -1;
	    this.rating = "NaN";
	    this.duration = "NaN";
	    this.listedIn = new String[]{"NaN"};
    }

    public Show(String showId, String type, String title, String director, String[] cast, String country, String dateAdded, int releaseYear, String rating, String duration, String[] listedIn){
    	this.showId = (showId != null && !showId.isEmpty()) ? showId : "NaN";
    	this.type = (type != null && !type.isEmpty()) ? type : "NaN";
    	this.title = (title != null && !title.isEmpty()) ? title : "NaN";
    	this.director = (director != null && !director.isEmpty()) ? director : "NaN";
    	this.cast = (cast != null && cast.length >= 0) ? cast : new String[]{"NaN"};
    	this.country =  (country != null && country.isEmpty()) ? country : "NaN";
    	SimpleDateFormat data = new SimpleDateFormat("MMMM dd, yyyy");
    	if(dateAdded != null && !dateAdded.isEmpty()){
    		try{
    			this.dateAdded = data.parse(dateAdded);
    		}catch(ParseException e){
    			System.out.println("Erro ao adicionar a data");
    			this.dateAdded = null;
    		}
    	}else{
    		this.dateAdded = null;
    	}
    	this.releaseYear = (releaseYear > 0) ? releaseYear : -1;
    	this.duration = (duration != null && !duration.isEmpty()) ? duration : "NaN";
    	this.listedIn = (listedIn != null && listedIn.length >= 0) ? listedIn : new String[]{"NaN"};
    }

    public void imprimir(){
	    SimpleDateFormat data = new SimpleDateFormat("MMMM dd, yyyy");
    	System.out.print("=> " + getShowId());
	    System.out.print(" ## " + getType());
	    System.out.print(" ## " + getTitle());
    	System.out.print(" ## " + getDirector());
    	System.out.print(" ## " + Arrays.toString(getCast()));
    	System.out.print(" ## " + getCountry());
    	System.out.print(" ## " + (getDateAdded() != null ? data.format(getDateAdded()) : "NaN"));
        System.out.print(" ## " + getReleaseYear());
	    System.out.print(" ## " + getRating());
    	System.out.print(" ## " + getDuration());
	    System.out.println(" ## " + Arrays.toString(getListedIn()) + "##");
    }

    public static ArrayList<Show> ler(){
        ArrayList<Show> listaShow = new ArrayList<>();
    	try(BufferedReader r = new BufferedReader(new FileReader("disneyplus.csv"))){
    		String linha = "";
    		r.readLine();
    		while((linha = r.readLine()) != null){
    		    Show show = new Show();
    			show.atribuir(linha);
    			listaShow.add(show);
    		}
	    }catch(IOException e){
		    e.printStackTrace();
	    }
	    return listaShow;
    }
    
    public void atribuir(String linha){
        String[] str = new String[11];
        Arrays.fill(str, "");
        str = separarLinha(linha);
        
        setShowId(str[0]);
        setType(str[1]);
        setTitle(str[2]);
        setDirector(str[3]);
        if(str[4] != null){
            setCast(ordenaArray(str[4]));
        }
        setDirector(str[5]);
        try {
            if(str[6] != null && !str[6].isEmpty()){
                SimpleDateFormat formato = new SimpleDateFormat("MMMM dd, yyyy", Locale.ENGLISH);
                Date data = formato.parse(str[6]);
                setDateAdded(data);
            }
        } catch (Exception e) {
            System.out.println("Erro ao adicionar a data: " + str[6]);
    		this.dateAdded = null;
        }
        setReleaseYear(Integer.parseInt(str[7]));
        setRating(str[8]);
        setDuration(str[9]);
        if(str[10] != null){
            setCast(ordenaArray(str[10]));
        }
    }
    
    public static String[] ordenaArray(String str){
        int temp = 0, tam = 0;
        for (int i = 0; i < str.length(); i++) {
            if (str.charAt(i) == ',') {
                tam++;
            }
        }
        
        String[] array = new String[tam+1];
        Arrays.fill(array, "");
        
        for(int i = 0; i < str.length(); i++){
            if(str.charAt(i) != ','){
                array[temp] += str.charAt(i);
            }else if(str.charAt(i) == ','){
                i++; // para retirar o espaÃ§o extra
                temp ++;
            }
            
        }
        
        for(int i = array.length -1; i > 0; i--){
            for(int j = 0; j < i; j++){
                if(array[j].compareTo(array[j + 1]) > 0){
                    String aux = array[j];
                    array[j] = array[j+1];
                    array[j+1] = aux;
                }
            }
        }
        return array;
    }
    
    public static String[] separarLinha(String linha){
        String[] str = new String[11];
        Arrays.fill(str, "");
        int aux = 0, i = 0;
        while(i < linha.length() && aux != 11){
            char letra = linha.charAt(i);
            char letra2 = 'c';
            if(i+1 < linha.length()){
                letra2 = linha.charAt(i+1);
            }
            if(letra == ',' && letra2 != ' '){
                if(str[aux] == ""){
                    str[aux] = null;
                }
                aux++;
            }else{
                if(letra != '"'){
                    str[aux] += letra;
                }else{
                    i++;
                    letra = linha.charAt(i);
                    while(i < linha.length() && linha.charAt(i) != '"'){
                        str[aux] += letra;
                        i++;
                        letra = linha.charAt(i);
                    }
                }
            }
            i++;
        }
        return str;
    }
    
    public static void main(String[] args){
    	Scanner input = new Scanner(System.in);
    	ArrayList<Show> listaShow = ler();
    	String id = "";
    	id = input.nextLine();
    	while(!id.equals("FIM")){
    	    for(int i = 0; i < listaShow.size(); i++){
    	        if(listaShow.get(i).getShowId().equals(id)){
    	            listaShow.get(i).imprimir();
    	        }
    	    }
    	    id = input.nextLine();
    	}
    	input.close();
    }
}
