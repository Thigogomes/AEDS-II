import java.util.*;

public class AlgebraBooleana{
    public static boolean operacao(List<String>lista, int p){
        String item = lista.get(p);
        System.out.println(item);
        if(item.equals("(")){
            lista.remove(p);
            boolean result = operacao(lista, p-1);
            lista.remove(p);
        }
        if(item.equals("not")){
            lista.remove(p);
            boolean a = Boolean.parseBoolean(lista.remove(p));
            lista.set(p, Boolean.toString(!a));
            return operacao(lista, p);
        }
        if(item.equals("and")){
            lista.remove(p);
            boolean b = Boolean.parseBoolean(lista.remove(p));
            boolean a = Boolean.parseBoolean(lista.remove(p));
            lista.set(p, Boolean.toString(a && b));
            return operacao(lista, p);
        }
        if(lista.size() == 2){
            return Boolean.parseBoolean(lista.remove(p));
        }
        return operacao(lista, p-1);
    }
    
    public static boolean trocaDeValores(int[] vet, String exp){
        String novaExp = "";
        for(int i = 0; i < exp.length(); i++){
            char letra = exp.charAt(i);
            if(letra == 'A'){
                if(vet[0] == 1){
                    novaExp = novaExp + "true";
                }else{
                    novaExp = novaExp + "false";
                }
            }else if(letra == 'B'){
                if(vet[1] == 1){
                    novaExp = novaExp + "true";
                }else{
                    novaExp = novaExp + "false";
                }
            }else if(letra == 'C'){
                if(vet[2] == 1){
                    novaExp = novaExp + "true";
                }else{
                    novaExp = novaExp + "false";
                }
            }else{
               novaExp = novaExp + letra; 
            }
        }
        novaExp = novaExp.replace(",", "");
        String[] expressao = novaExp.split("(?<=\\b(or|and|not)\\b)|(?=[(),])|(?<=[(),])|\\s+");
        List<String> lista = new ArrayList<>();
        for(int i = 0; i < expressao.length; i++) {
            String item = expressao[i];
            item = item.trim();
            if (!item.isEmpty()) {
                lista.add(item);
            }
        }
        return operacao(lista, lista.size()-1);
    }
    
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);
		int n = input.nextInt();
		while(n != 0){
		    int[] vet = new int[n];
    		String exp = "";
    		for(int i = 0; i < n; i++){
    		    vet[i] = input.nextInt();
    		}
    		exp = input.nextLine();
    		boolean result = trocaDeValores(vet, exp);
    		if(result == true){
    		    System.out.println(1);
    		}else{
    		    System.out.println(0);
    		}
    		n = input.nextInt();
		}
	}
}
