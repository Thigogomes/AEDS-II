import java.util.*;

public class Main{
	public static void main(String[] args) {
	    String exp = "or(false , and(not(false) , false))";
		Stack<String> operadores = new Stack<String>();
        Stack<Boolean> valores = new Stack<Boolean>();
        exp = exp.replace(",", "");
        
        String[] expressao = exp.split("(?<=\\b(or|and|not)\\b)|(?=[(),])|(?<=[(),])|\\s+");
        for(int i = 0; i < expressao.length; i++){
            if(expressao[i].equals(" ")){
                for(int j = i; j <  expressao.length-1; j++){
                    expressao[j] = expressao[j+1];
                }
            }
        }
        for(int i = 0; i < expressao.length; i++){
            System.out.print(expressao[i]);
        }
        for(int i = 0; i < expressao.length; i++){
            String item = expressao[i];
            if (item.equals("not") || item.equals("and") || item.equals("or")) {
                operadores.push(item);
            }else if (item.equals("false") || item.equals("true")) {
                boolean itemBool = Boolean.parseBoolean(item);
                valores.push(itemBool);
            }else if(item.equals(")")){
                
                while(!operadores.empty()){
                    String op = operadores.pop();
                    if(op.equals("not")){
                        boolean v1 = valores.pop();
                        valores.push(!v1);
                    }else if(op.equals("and")){
                        if(valores.size() > 2){
                            operadores.push(op);
                        }else{
                            int cont = 0, j = i;
                            while(!expressao[j].equals("(")){
                                if(expressao[j].equals("true") || expressao[j].equals("false")){
                                    cont++;
                                }
                                j--;
                            }
                            if(cont == 2){
                                boolean b = valores.pop();
                                boolean a = valores.pop();
                                valores.push(a && b);    
                            }else if(cont == 3){
                                boolean c = valores.pop();
                                boolean b = valores.pop();
                                boolean a = valores.pop();
                                valores.push(a && b && c);    
                            }
                        }
                    }else if(op.equals("or")){
                        if(valores.size() > 2){
                            operadores.push(op);
                        }else{
                            int cont = 0, j = i;
                            while(!expressao[j].equals("(")){
                                if(expressao[j].equals("true") || expressao[j].equals("false")){
                                    cont++;
                                }
                                j--;
                            }
                            System.out.println(cont);
                            if(cont == 2){
                                boolean b = valores.pop();
                                boolean a = valores.pop();
                                valores.push(a || b);    
                            }else if(cont == 3){
                                boolean c = valores.pop();
                                boolean b = valores.pop();
                                boolean a = valores.pop();
                                valores.push(a || b || c);    
                            }
                        }
                    }
                }
            }
        } 
        System.out.println("fim");
	}
}
