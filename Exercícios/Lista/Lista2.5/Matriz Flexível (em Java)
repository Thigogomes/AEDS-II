import java.util.*;

public class MatrizFlexivel {
	private Celula inicio;
	
	public MatrizFlexivel(){
	    this(3,3);
	}

    public MatrizFlexivel(int linha, int coluna){
        if(linha <= 0 || coluna <= 0){
            throw new RuntimeException("Erro!");
        }
        
        Celula lin1 = new Celula(0);
        inicio = lin1;
        Celula temp = lin1;
        
        for(int i = 1; i < coluna; i++){
            temp.dir = new Celula(0);
            temp.dir.esq = temp;
            temp = temp.dir;
        }
        
        for(int i = 1; i < linha; i++){
            Celula lin2 = new Celula(0);
            lin1.inf = lin2;
            lin2.sup = lin1;
            temp = lin2;
            for(int j = 1; j < coluna; j++){
                temp.dir = new Celula(0);
                temp.dir.esq = temp;
                temp.sup.dir.inf = temp.dir;
                temp.dir.sup = temp.sup.dir;
                temp = temp.dir;
            }
            lin1 = lin1.inf;
        }
    }
    
    public void inserir(int lin, int col, int x){
        if(lin < 0 || col < 0){
            throw new RuntimeException("Erro!");
        }
        Celula atual = inicio;
        for(int i = 0; i < lin; i++){
            if(atual.inf == null){
                throw new IndexOutOfBoundsException("Erro! Linha invalida!");
            }
            atual = atual.inf;
        }
        for(int j = 0; j < col; j++){
            if(atual.dir == null){
                throw new IndexOutOfBoundsException("Erro! Linha invalida!");
            }
            atual = atual.dir;
        }
        atual.elemento = x;
    }
    
    public MatrizFlexivel somaMatriz(MatrizFlexivel matriz2){
        int lin = tamanholinhas(), col = tamanhoColunas();
        MatrizFlexivel m3 = new MatrizFlexivel();
        
        Celula m2 = matriz2.inicio;
        Celula m1 = inicio;
        
        Celula aux = inicio;
        Celula aux2 = m2;
        for(int i = 0; i < lin; i++){
            aux = m1;
            aux2 = m2;
            for(int j = 0; j < col; j++){
                m3.inserir(i, j, m1.elemento+m2.elemento);
                m1 = m1.dir;
                m2 = m2.dir;
            }
            m1 = aux.inf;
            m2 = aux2.inf;
        }
        return m3;
    }
    
    public int tamanhoColunas(){
        int tam = 0;
        for(Celula i = inicio; i != null; i = i.dir){
            tam++;
        }
        return tam;
    }
    
    public int tamanholinhas(){
        int tam = 0;
        for(Celula i = inicio; i != null; i = i.inf){
            tam++;
        }
        return tam;
    }
    
    public void printDP(){
        int lin = tamanholinhas(), col = tamanhoColunas();
        if(lin != col){
            throw new RuntimeException("Erro!");
        }
        Celula atual = inicio;
        Celula aux = inicio;
        System.out.print("{");
        for(int i = 0; i < lin; i++){
            aux = atual;
            for(int j = 0; j < col; j++){
                if(j == i){
                    System.out.print(atual.elemento);
                    if(j+1 != col){
                        System.out.print(", ");
                    }
                }
                atual = atual.dir;
            }
            atual = aux.inf;
        }
        System.out.println("}");
    }
    
    public void mostrar(){
        for(Celula i = inicio; i != null; i = i.inf){
            System.out.print("|");
            for(Celula j = i; j != null; j = j.dir){
                System.out.print(j.elemento);
                if(j.dir != null){
                    System.out.print(" ");
                }
            }
            System.out.println("|");
        }
        System.out.println();
    }

	public static void main(String[] args) {
		MatrizFlexivel matriz = new MatrizFlexivel();
		matriz.inserir(1,0,9);
		matriz.inserir(1,1,5);
		matriz.inserir(1,2,2);
		matriz.inserir(0,2,1);
		matriz.inserir(0,1,2);
		matriz.inserir(0,0,8);
		matriz.inserir(2,0,9);
		matriz.inserir(2,1,3);
		matriz.inserir(2,2,2);
		matriz.mostrar();
		MatrizFlexivel matriz2 = new MatrizFlexivel();
		matriz2.inserir(1,0,9);
		matriz2.inserir(1,1,5);
		matriz2.inserir(1,2,2);
		matriz2.inserir(0,2,1);
		matriz2.inserir(0,1,2);
		matriz2.inserir(0,0,8);
		matriz2.inserir(2,0,9);
		matriz2.inserir(2,1,3);
		matriz2.inserir(2,2,7);
		matriz2.mostrar();
		matriz.printDP();
		MatrizFlexivel matriz3 = new MatrizFlexivel();
		matriz3 = matriz.somaMatriz(matriz2);
		matriz3.mostrar();
	}
}
